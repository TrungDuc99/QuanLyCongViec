{"version":3,"file":"index.modern.js","sources":["../src/hook/index.tsx","../src/component/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useMemo } from 'react'\nimport lodashDebounce from 'lodash.debounce'\n\nexport type DebounceOptions = Parameters<typeof lodashDebounce>[2]\n\nconst createCallback = (debounce: number, handleOnScroll: () => void, options: DebounceOptions): (() => void) => {\n  if (debounce) {\n    return lodashDebounce(handleOnScroll, debounce, options)\n  } else {\n    return handleOnScroll\n  }\n}\n\n/**\n *  A react hook that invokes a callback when user scrolls to the bottom\n *\n * @param onBottom Required callback that will be invoked when scrolled to bottom\n * @param offset Offset from bottom of page in pixels. E.g. 300 will trigger onBottom 300px from the bottom of the page\n * @param debounce Optional debounce in milliseconds, defaults to 200ms\n * @param debounceOptions Options passed to lodash.debounce, see https://lodash.com/docs/4.17.15#debounce\n * @param triggerOnNoScroll Triggers the onBottom callback when the page has no scrollbar\n * @return React.MutableRefObject Optionally you can use this to pass to a element to use that as the scroll container\n */\nfunction useBottomScrollListener<T extends HTMLElement>(\n  onBottom: () => void,\n  offset: number = 0,\n  debounce: number = 200,\n  debounceOptions: DebounceOptions = { leading: true },\n  triggerOnNoScroll: boolean = false\n) {\n  const debouncedOnBottom = useMemo(() => createCallback(debounce, onBottom, debounceOptions), [debounce, onBottom])\n  const containerRef = useRef<T>(null)\n  const handleOnScroll = useCallback(() => {\n    if (containerRef.current != null) {\n      const scrollNode: T = containerRef.current\n      const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + scrollNode.clientHeight)\n      const scrollPosition = Math.round(scrollNode.scrollHeight - offset)\n\n      if (scrollPosition <= scrollContainerBottomPosition) {\n        debouncedOnBottom()\n      }\n    } else {\n      const scrollNode: Element = document.scrollingElement || document.documentElement\n      const scrollContainerBottomPosition = Math.round(scrollNode.scrollTop + window.innerHeight)\n      const scrollPosition = Math.round(scrollNode.scrollHeight - offset)\n\n      if (scrollPosition <= scrollContainerBottomPosition) {\n        debouncedOnBottom()\n      }\n    }\n    // ref dependency needed for the tests, doesn't matter for normal execution\n  }, [offset, onBottom, containerRef.current])\n\n  useEffect((): (() => void) => {\n    const ref: T | null = containerRef.current\n    if (ref != null) {\n      ref.addEventListener('scroll', handleOnScroll)\n    } else {\n      window.addEventListener('scroll', handleOnScroll)\n    }\n\n    if (triggerOnNoScroll) {\n      handleOnScroll()\n    }\n\n    return () => {\n      if (ref != null) {\n        ref.removeEventListener('scroll', handleOnScroll)\n      } else {\n        window.removeEventListener('scroll', handleOnScroll)\n      }\n    }\n  }, [handleOnScroll, debounce])\n\n  return containerRef\n}\n\nexport default useBottomScrollListener\n","import React from 'react'\n\nimport useBottomScrollListener, { DebounceOptions } from '../hook'\n\nexport interface Props {\n  /**\n   * Required callback that will be invoked when scrolled to bottom\n   */\n  onBottom: () => void\n\n  /**\n   * Offset from bottom of page in pixels. E.g. 300 will trigger onBottom 300px from the bottom of the page\n   */\n  offset?: number\n\n  /**\n   * Optional debounce in milliseconds, defaults to 200ms\n   */\n  debounce?: number\n\n  /**\n   * Options passed to lodash.debounce, see https://lodash.com/docs/4.17.15#debounce\n   */\n  debounceOptions?: DebounceOptions\n\n  /**\n   * Triggers the onBottom callback when the page has no scrollbar, defaults to false\n   */\n  triggerOnNoScroll?: boolean\n\n  /**\n   *   Optional children to be rendered.\n   *\n   *   If children passed is a function, that function will be passed a React.RefObject<HTMLElement>\n   *   that ref shall be passed to a child tag that will be used for the scrolling container.\n   * */\n  children?:\n    | JSX.Element\n    | (<T>(ref: ((instance: T | null) => void) | React.MutableRefObject<T | null> | null) => JSX.Element)\n}\n\n/**\n * A simple React component that lets you listen for when you have scrolled to the bottom.\n */\nconst BottomScrollListener = ({ children, onBottom, offset, debounce, debounceOptions, triggerOnNoScroll }: Props): JSX.Element | null => {\n  const optionalScrollContainerRef = useBottomScrollListener(onBottom, offset, debounce, debounceOptions, triggerOnNoScroll)\n\n  if (!children) return null\n  else if (typeof children === 'function') return children(optionalScrollContainerRef)\n  else return children\n}\n\nexport default BottomScrollListener\n"],"names":["createCallback","debounce","handleOnScroll","options","lodashDebounce","useBottomScrollListener","onBottom","offset","debounceOptions","triggerOnNoScroll","leading","debouncedOnBottom","useMemo","containerRef","useRef","useCallback","current","scrollNode","scrollContainerBottomPosition","Math","round","scrollTop","clientHeight","scrollPosition","scrollHeight","document","scrollingElement","documentElement","window","innerHeight","useEffect","ref","addEventListener","removeEventListener","BottomScrollListener","children","optionalScrollContainerRef"],"mappings":"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"}